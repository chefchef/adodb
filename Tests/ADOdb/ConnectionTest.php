<?php
namespace ADOdb;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-07-22 at 17:57:47.
 */
class ConnectionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Connection
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Connection('sqlite::memory:');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testConnect()
    {
        $this->object->connect();
        return $this->object;
    }

    /**
     * @param Connection $db
     * @depends testConnect
     */
    public function testExecute(Connection $db)
    {
        $table = uniqid('table_');
        $db->execute("CREATE TABLE $table (id int, display varchar(100));");
        for ($i=1; $i<5; $i++) {
            $value = md5($i);
            $db->execute("INSERT INTO $table VALUES (:id, :value);", array($i, $value));
        }
        return array($table, $db);
    }

    /**
     * @param $params
     * @depends testExecute
     */
    public function testGetAll(array $context)
    {
        list($table, $db) = $context;
        $results = $db->getAll("SELECT * FROM $table;");
        $this->assertEquals(4, count($results));
    }

    /**
     * @param $params
     * @depends testExecute
     */
    public function testGetCol(array $context)
    {
        list($table, $db) = $context;
        $results = $db->getCol("SELECT * FROM $table;");
        $this->assertEquals(4, count($results));
        $this->assertEquals(1, count($results[0]));
    }

    /**
     * @param $params
     * @depends testExecute
     */
    public function testGetOne(array $context)
    {
        list($table, $db) = $context;
        $results = $db->getOne("SELECT * FROM $table;");
        $this->assertEquals('1', $results);
    }

    /**
     * @param $params
     * @depends testExecute
     */
    public function testGetRow(array $context)
    {
        list($table, $db) = $context;
        $results = $db->getRow("SELECT * FROM $table;");
        $this->assertEquals(
            array("id" => "1", "display" => "c4ca4238a0b923820dcc509a6f75849b"),
            $results
        );
    }
}